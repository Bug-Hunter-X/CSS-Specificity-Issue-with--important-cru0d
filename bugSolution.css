Several approaches can solve the issue. Avoiding `!important` is often the best practice, but if it's necessary:

**1.  Increase Specificity:** Make the overriding selector even more specific.  This might involve adding more classes or IDs.

```css
.parent {
  color: blue;
}

.child {
  color: red !important;
}

.parent .child.override {
  color: green;
}
```

**2. Use a More Specific `!important`:**  If you must use `!important`, apply it to the more specific selector to ensure it overrides the less-specific one.

```css
.parent {
  color: blue;
}

.child {
  color: red !important;
}

.parent .child {
  color: green !important;
}
```

**3.  Rethink the Approach:** The most robust solution is often to refactor your CSS to avoid using `!important`.  Organize your styles effectively to minimize conflicts and ensure predictable behavior.